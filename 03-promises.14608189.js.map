{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAe,CACnBC,YAAaC,SAASC,cAAc,SACpCC,kBAAmBF,SAASC,cAAc,kBAC1CE,iBAAkBH,SAASC,cAAc,iBACzCG,sBAAuBJ,SAASC,cAAc,oBAuEhD,SAASI,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAvDP,WACE,GAAyC,OAArCQ,aAAaC,QAAQ,YACvB,OAEF,IAAkDC,EAAAC,KAAKC,MACrDJ,aAAaC,QAAQ,aADfI,EAA0CH,EAA1CG,WAAYC,EAA8BJ,EAA9BI,UAAWC,EAAmBL,EAAnBK,eAI/BxB,EAAaI,kBAAkBqB,MAAQH,EACvCtB,EAAaK,iBAAiBoB,MAAQF,EACtCvB,EAAaM,sBAAsBmB,MAAQD,C,CA/BwCE,GAEpExB,SAASC,cAAc,kBAE/BwB,iBAAiB,SAAS,WACjC3B,EAAaI,kBAAkBqB,MAAQ,GACvCzB,EAAaK,iBAAiBoB,MAAQ,GACtCzB,EAAaM,sBAAsBmB,MAAQ,GAE3CR,aAAaW,WAAW,W,IA0B1B5B,EAAaC,YAAY0B,iBAAiB,UAE1C,SAAsBE,GACpBA,EAAMC,iBAEN,IAAIR,EAAaS,OAAO/B,EAAaI,kBAAkBqB,OACnDF,EAAYQ,OAAO/B,EAAaK,iBAAiBoB,OACjDD,EAAiBO,OAAO/B,EAAaM,sBAAsBmB,QA9BjE,SAA4BH,EAAYC,EAAWC,GACjD,IAAMQ,EAAa,CACjBV,aACAC,YACAC,kBAEFP,aAAagB,QAAQ,WAAYb,KAAKc,UAAUF,G,CA0BhDG,CAAmBb,EAAYC,EAAWC,GAE1C,IAAK,IAAIY,EAAI,EAAGA,GAAKZ,EAAgBY,GAAK,EACpCA,EAAI,IACNd,GAAcC,GAEhBhB,EAAc6B,EAAGd,GACde,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBX,EAAAyC,OAAOC,KAAK,CACVhC,SAAU,aACViC,QAASnB,EAAaC,EAAYA,EAAYC,IAEhD1B,EAAAyC,OAAOG,QAAQ,uBAAwCC,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,M,IAE9DmC,OAAM,SAAAN,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBX,EAAAyC,OAAOC,KAAK,CACVhC,SAAU,aACViC,QAASnB,EAAaC,EAAYA,EAAYC,IAEhD1B,EAAAyC,OAAOM,QAAQ,sBAAqCF,OAAfnC,EAAS,QAAYmC,OAANlC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst HTMLElements = {\n  formElement: document.querySelector('.form'),\n  firstDelayElement: document.querySelector('[name=\"delay\"]'),\n  delayStepElement: document.querySelector('[name=\"step\"]'),\n  promisesAmountElement: document.querySelector('[name=\"amount\"]'),\n};\n\n// Вспомогательный функционал для сохранения в локальном хранилище данных полей, а также их обнуления\ngetFromLocalStorage();\n\nconst resetBtn = document.querySelector('[name=\"reset\"]');\n\nresetBtn.addEventListener('click', () => {\n  HTMLElements.firstDelayElement.value = '';\n  HTMLElements.delayStepElement.value = '';\n  HTMLElements.promisesAmountElement.value = '';\n\n  localStorage.removeItem('formData');\n});\n\nfunction saveToLocalStorage(firstDelay, delayStep, promisesAmount) {\n  const storageObj = {\n    firstDelay,\n    delayStep,\n    promisesAmount,\n  };\n  localStorage.setItem('formData', JSON.stringify(storageObj));\n}\n\nfunction getFromLocalStorage() {\n  if (localStorage.getItem('formData') === null) {\n    return;\n  }\n  const { firstDelay, delayStep, promisesAmount } = JSON.parse(\n    localStorage.getItem('formData')\n  );\n\n  HTMLElements.firstDelayElement.value = firstDelay;\n  HTMLElements.delayStepElement.value = delayStep;\n  HTMLElements.promisesAmountElement.value = promisesAmount;\n}\n// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nHTMLElements.formElement.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = Number(HTMLElements.firstDelayElement.value);\n  let delayStep = Number(HTMLElements.delayStepElement.value);\n  let promisesAmount = Number(HTMLElements.promisesAmountElement.value);\n\n  saveToLocalStorage(firstDelay, delayStep, promisesAmount);\n\n  for (let i = 1; i <= promisesAmount; i += 1) {\n    if (i > 1) {\n      firstDelay += delayStep;\n    }\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.init({\n          position: 'center-top',\n          timeout: firstDelay - delayStep + delayStep * promisesAmount,\n        });\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.init({\n          position: 'center-top',\n          timeout: firstDelay - delayStep + delayStep * promisesAmount,\n        });\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$HTMLElements","formElement","document","querySelector","firstDelayElement","delayStepElement","promisesAmountElement","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","localStorage","getItem","ref","JSON","parse","firstDelay","delayStep","promisesAmount","value","$ce04d3a99e08e73b$var$getFromLocalStorage","addEventListener","removeItem","event","preventDefault","Number","storageObj","setItem","stringify","$ce04d3a99e08e73b$var$saveToLocalStorage","i","then","param","Notify","init","timeout","success","concat","catch","failure"],"version":3,"file":"03-promises.14608189.js.map"}