{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAe,CACnBC,YAAaC,SAASC,cAAc,SACpCC,kBAAmBF,SAASC,cAAc,kBAC1CE,iBAAkBH,SAASC,cAAc,iBACzCG,sBAAuBJ,SAASC,cAAc,qBAyBhD,WACE,GAAyC,OAArCI,aAAaC,QAAQ,YACvB,OAEF,MAAMC,WAAEA,EAAUC,UAAEA,EAASC,eAAEA,GAAmBC,KAAKC,MACrDN,aAAaC,QAAQ,aAGvBR,EAAaI,kBAAkBU,MAAQL,EACvCT,EAAaK,iBAAiBS,MAAQJ,EACtCV,EAAaM,sBAAsBQ,MAAQH,C,CA/BwCI,GAmErF,SAASC,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1EIhB,SAASC,cAAc,kBAE/BuB,iBAAiB,SAAS,KACjC1B,EAAaI,kBAAkBU,MAAQ,GACvCd,EAAaK,iBAAiBS,MAAQ,GACtCd,EAAaM,sBAAsBQ,MAAQ,GAE3CP,aAAaoB,WAAW,WAAW,IA0BrC3B,EAAaC,YAAYyB,iBAAiB,UAE1C,SAAsBE,GACpBA,EAAMC,iBAEN,IAAIpB,EAAaqB,OAAO9B,EAAaI,kBAAkBU,OACnDJ,EAAYoB,OAAO9B,EAAaK,iBAAiBS,OACjDH,EAAiBmB,OAAO9B,EAAaM,sBAAsBQ,QA9BjE,SAA4BL,EAAYC,EAAWC,GACjD,MAAMoB,EAAa,C,WACjBtB,E,UACAC,E,eACAC,GAEFJ,aAAayB,QAAQ,WAAYpB,KAAKqB,UAAUF,G,CA0BhDG,CAAmBzB,EAAYC,EAAWC,GAE1C,IAAK,IAAIwB,EAAI,EAAGA,GAAKxB,EAAgBwB,GAAK,EACpCA,EAAI,IACN1B,GAAcC,GAEhBM,EAAcmB,EAAG1B,GACd2B,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBpB,EAAAuC,OAAOC,KAAK,CACVrB,SAAU,aACVsB,QAAS9B,EAAaC,EAAYA,EAAYC,IAEhDb,EAAAuC,OAAOG,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBpB,EAAAuC,OAAOC,KAAK,CACVrB,SAAU,aACVsB,QAAS9B,EAAaC,EAAYA,EAAYC,IAEhDb,EAAAuC,OAAOK,QAAQ,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst HTMLElements = {\n  formElement: document.querySelector('.form'),\n  firstDelayElement: document.querySelector('[name=\"delay\"]'),\n  delayStepElement: document.querySelector('[name=\"step\"]'),\n  promisesAmountElement: document.querySelector('[name=\"amount\"]'),\n};\n\n// Вспомогательный функционал для сохранения в локальном хранилище данных полей, а также их обнуления\ngetFromLocalStorage();\n\nconst resetBtn = document.querySelector('[name=\"reset\"]');\n\nresetBtn.addEventListener('click', () => {\n  HTMLElements.firstDelayElement.value = '';\n  HTMLElements.delayStepElement.value = '';\n  HTMLElements.promisesAmountElement.value = '';\n\n  localStorage.removeItem('formData');\n});\n\nfunction saveToLocalStorage(firstDelay, delayStep, promisesAmount) {\n  const storageObj = {\n    firstDelay,\n    delayStep,\n    promisesAmount,\n  };\n  localStorage.setItem('formData', JSON.stringify(storageObj));\n}\n\nfunction getFromLocalStorage() {\n  if (localStorage.getItem('formData') === null) {\n    return;\n  }\n  const { firstDelay, delayStep, promisesAmount } = JSON.parse(\n    localStorage.getItem('formData')\n  );\n\n  HTMLElements.firstDelayElement.value = firstDelay;\n  HTMLElements.delayStepElement.value = delayStep;\n  HTMLElements.promisesAmountElement.value = promisesAmount;\n}\n// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nHTMLElements.formElement.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = Number(HTMLElements.firstDelayElement.value);\n  let delayStep = Number(HTMLElements.delayStepElement.value);\n  let promisesAmount = Number(HTMLElements.promisesAmountElement.value);\n\n  saveToLocalStorage(firstDelay, delayStep, promisesAmount);\n\n  for (let i = 1; i <= promisesAmount; i += 1) {\n    if (i > 1) {\n      firstDelay += delayStep;\n    }\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.init({\n          position: 'center-top',\n          timeout: firstDelay - delayStep + delayStep * promisesAmount,\n        });\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.init({\n          position: 'center-top',\n          timeout: firstDelay - delayStep + delayStep * promisesAmount,\n        });\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$HTMLElements","formElement","document","querySelector","firstDelayElement","delayStepElement","promisesAmountElement","localStorage","getItem","firstDelay","delayStep","promisesAmount","JSON","parse","value","$47d4ff9957288465$var$getFromLocalStorage","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","removeItem","event","preventDefault","Number","storageObj","setItem","stringify","$47d4ff9957288465$var$saveToLocalStorage","i","then","Notify","init","timeout","success","catch","failure"],"version":3,"file":"03-promises.b03a7932.js.map"}